{"version":3,"sources":["components/hoc/withAuthRedirect.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","undefined","this","props","to","React","connect","module","exports","DialogItem","className","styles","dialog","activeClassName","active","id","name","Message","message","maxLengthMessage50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","wrapperForTextarea","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","dialogsData","map","d","messagesElements","messagesData","m","dialogs","wrapperForMessage","dialogsItem","messages","values","addMessage","newMessageText","compose","messagesPage","dispatch","addMessageActionCreator"],"mappings":"4NAMIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAIVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,YAAyBC,IAAtBC,KAAKC,MAAMP,OAA6B,KACvCM,KAAKC,MAAMP,OACR,cAACG,EAAD,eAAeG,KAAKC,QADG,cAAC,IAAD,CAAUC,GAAI,eALT,GAEXC,IAAMN,WAUtC,OAFqCO,YAAQZ,EAARY,CAAoCN,K,oBCpB7EO,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,wBAAwB,kBAAoB,mCAAmC,mBAAqB,sC,2FCYvSC,EATI,SAACN,GAEhB,OACI,qBAAKO,UAAWC,IAAOC,OAAvB,SACI,cAAC,IAAD,CAASC,gBAAiBF,IAAOG,OAAQV,GAHtC,YAGiDD,EAAMY,GAA1D,SAA+DZ,EAAMa,UCGlEC,EARC,SAACd,GACb,OACQ,qBAAKO,UAAWC,IAAOO,QAAvB,SACKf,EAAMe,W,yCCGjBC,EAAqBC,YAAiB,IAyCtCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbL,SAACnB,GACpB,OACI,uBAAMqB,SAAUrB,EAAMsB,aAAcf,UAAWC,IAAOe,mBAAtD,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXb,KAAM,iBACNc,YAAa,qBACbC,SAAU,CAACC,IAASb,KAE3B,yDAOGc,EAzCC,SAAC9B,GAEb,IAAI+B,EAAkB/B,EAAMgC,YAAYC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAiBD,GAAIsB,EAAEtB,IAAZsB,EAAEtB,OAC9EuB,EAAmBnC,EAAMoC,aAAaH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAEzB,OAMvF,OAAIZ,EAAMP,OAGN,sBAAKc,UAAWC,IAAO8B,QAAvB,UACI,sBAAK/B,UAAWC,IAAO+B,kBAAvB,UACI,qBAAKhC,UAAWC,IAAOgC,YAAvB,SACKT,IAEL,qBAAKxB,UAAWC,IAAOiC,SAAvB,SACKN,OAGT,cAACjB,EAAD,CAAqBG,SAhBT,SAACqB,GACjB1C,EAAM2C,WAAWD,EAAOE,sBAGH,cAAC,IAAD,CAAU3C,GAAG,Y,wBCG3B4C,sBAAQ1C,aAhBD,SAACX,GACnB,MAAO,CACHwC,YAAaxC,EAAMsD,aAAad,YAChCI,aAAc5C,EAAMsD,aAAaV,aACjCQ,eAAgBpD,EAAMsD,aAAaF,mBAIlB,SAACG,GACtB,MAAO,CACHJ,WAAY,SAACC,GACTG,EAASC,YAAwBJ,SAKwBjD,IAAtDkD,CAAwEf","file":"static/js/4.362ffa28.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(this.props.isAuth === undefined) return null\r\n            if(!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n   let  ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__7mByN\",\"dialogsItem\":\"Dialogs_dialogsItem__B40io\",\"dialog\":\"Dialogs_dialog__cwZS3\",\"messages\":\"Dialogs_messages__14pQm\",\"message\":\"Dialogs_message__-t_Ke\",\"active\":\"Dialogs_active__1FT58\",\"wrapperForMessage\":\"Dialogs_wrapperForMessage__QPlcd\",\"wrapperForTextarea\":\"Dialogs_wrapperForTextarea__1fsYx\"};","import React from \"react\";\r\nimport styles from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\";\r\n    return (\r\n        <div className={styles.dialog}>\r\n            <NavLink activeClassName={styles.active} to={path + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport styles from \"../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n            <div className={styles.message}>\r\n                {props.message}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Textarea} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLengthMessage50 = maxLengthCreator(50)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsData.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n    let messagesElements = props.messagesData.map(m => <Message message={m.message} key={m.id}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageText);\r\n    }\r\n\r\n    if(!props.isAuth) return <Redirect to=\"/login\" />\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.wrapperForMessage}>\r\n                <div className={styles.dialogsItem}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={styles.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.wrapperForTextarea}>\r\n            <Field component={Textarea}\r\n                   name={\"newMessageText\"}\r\n                   placeholder={\"Enter your message\"}\r\n                   validate={[required,maxLengthMessage50]}\r\n            />\r\n            <button> Send Message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.messagesPage.dialogsData,\r\n        messagesData: state.messagesPage.messagesData,\r\n        newMessageText: state.messagesPage.newMessageText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)\r\n"],"sourceRoot":""}
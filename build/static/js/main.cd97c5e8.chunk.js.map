{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","redux/profile-reducer.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/store.js","components/Profile/Profile.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css"],"names":["module","exports","Header","className","styles","header","src","Navbar","props","nav","item","to","activeClassName","active","Post","likesAndMessage","message","like","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","postsData","id","newPostText","profileReducer","state","action","type","newPost","push","newText","MyPosts","posts","map","post","newPostElement","React","createRef","wrapper","myPost","onChange","text","current","value","dispatch","updateNewPostTextActionCreator","ref","textarea","onClick","button","ProfileInfo","img","description","ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","messagesData","dialogsData","name","newMessageText","dialogsReducer","newMessage","sidebarReducer","store","_state","profilePage","messagesPage","sidebar","friends","_callSubscriber","getState","this","subscribe","observer","addPost","updateNewPostText","addMessage","updateNewMessageText","window","Profile","DialogItem","dialog","Message","Dialogs","dialogsElements","d","messagesElements","m","messageText","dialogs","dialogsItem","messages","updateNewMessageTextActionCreator","App","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","createStore","rerenderEntireTree","ReactDOM","bind","document","getElementById"],"mappings":"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","file":"static/js/main.cd97c5e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3h2I9\",\"textarea\":\"MyPosts_textarea__3UrQM\",\"button\":\"MyPosts_button__2M1xn\",\"wrapper\":\"MyPosts_wrapper__CACXw\",\"myPost\":\"MyPosts_myPost__1FXR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__1tdta\",\"wrapper\":\"ProfileInfo_wrapper__3j5wR\",\"description\":\"ProfileInfo_description__pomnQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3UFjI\",\"likesAndMessage\":\"Post_likesAndMessage__-iqab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2uQ72\"};","import React from \"react\";\r\nimport styles from \"./Header.module.css\";\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={styles.header}>\r\n            <img src=\"https://i.ibb.co/RNJ320j/telegram-logo-circle-icon-134012.png\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport styles from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={styles.nav}>\r\n            <div className={styles.item}>\r\n                <NavLink to=\"/profile\" activeClassName={styles.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={styles.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to=\"news\" activeClassName={styles.active}>News</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to=\"music\" activeClassName={styles.active}>Music</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to=\"settings\" activeClassName={styles.active}>Settings</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to=\"friends\" activeClassName={styles.active}>Friends</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport styles from \"./Post.module.css\";\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={styles.item}>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/4/4d/Conor_McGregor_2018.jpg\"/>\r\n            <div className={styles.likesAndMessage}>\r\n                {props.message}\r\n                <div>\r\n                    <span> Likes </span> - {props.like}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {id: 1, message: 'post1', like: 10},\r\n        {id: 2, message: 'post2', like: 11},\r\n        {id: 3, message: 'post3', like: 12},\r\n    ],\r\n    newPostText: 'hello react-js!',\r\n}\r\n\r\n const profileReducer = (state = initialState,action) => {\r\n     switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                like: 15\r\n            };\r\n            state.postsData.push(newPost);\r\n            state.newPostText = '';\r\n            return state\r\n        case UPDATE_NEW_POST_TEXT:\r\n            state.newPostText = action.newText;\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const updateNewPostTextActionCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text})\r\n\r\nexport default profileReducer;","import React from \"react\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\n\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let posts = props.postsData.map(post => <Post message={post.message} like={post.like}/>)\r\n\r\n    let newPostElement = React.createRef()\r\n\r\n    let addPost = () => {\r\n        props.dispatch(addPostActionCreator())\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.dispatch(updateNewPostTextActionCreator(text))\r\n    }\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <h3 className={styles.myPost}>My posts</h3>\r\n            <div className={styles.posts}>\r\n                <div>\r\n                    <textarea onChange={onPostChange}\r\n                              value={props.newPostText}\r\n                              ref={newPostElement}\r\n                              className={styles.textarea}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost} className={styles.button}>Add Post</button>\r\n                </div>\r\n            </div>\r\n            {posts}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div>\r\n                <img className={styles.img}\r\n                     src=\"https://images.ctfassets.net/hrltx12pl8hq/7yQR5uJhwEkRfjwMFJ7bUK/dc52a0913e8ff8b5c276177890eb0129/offset_comp_772626-opt.jpg?fit=fill&w=800&h=300\"/>\r\n            </div>\r\n            <div className={styles.description}>\r\n                Description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\n\r\nlet initialState = {\r\n    messagesData: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"Hey\"},\r\n        {id: 3, message: \"Ho\"},\r\n    ],\r\n    dialogsData: [\r\n        {id: 1, name: \"Dima\"},\r\n        {id: 2, name: \"Pasha\"},\r\n        {id: 3, name: \"Sergey\"},\r\n    ],\r\n    newMessageText: \"hello Dima\",\r\n}\r\n\r\n const dialogsReducer = (state = initialState,action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 4,\r\n                message: state.newMessageText,\r\n            };\r\n            state.messagesData.push(newMessage);\r\n            state.newMessageText = '';\r\n            return state\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            state.newMessageText = action.newText;\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addMessageActionCreator = () => ({type: ADD_MESSAGE})\r\nexport const updateNewMessageTextActionCreator = (text) => ({type: UPDATE_NEW_MESSAGE_TEXT, newText: text})\r\n\r\nexport default dialogsReducer;\r\n","let initialState = {};\r\n\r\n\r\nexport const sidebarReducer = (state = initialState,action) => {\r\n    return state;\r\n}","import profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\n\r\nlet store = {\r\n    _state: {\r\n        profilePage: {\r\n            postsData: [\r\n                {id: 1, message: 'post1', like: 10},\r\n                {id: 2, message: 'post2', like: 11},\r\n                {id: 3, message: 'post3', like: 12},\r\n            ],\r\n            newPostText: 'hello react-js!',\r\n        },\r\n        messagesPage: {\r\n            messagesData: [\r\n                {id: 1, message: \"Hi\"},\r\n                {id: 2, message: \"Hey\"},\r\n                {id: 3, message: \"Ho\"},\r\n            ],\r\n            dialogsData: [\r\n                {id: 1, name: \"Dima\"},\r\n                {id: 2, name: \"Pasha\"},\r\n                {id: 3, name: \"Sergey\"},\r\n            ],\r\n            newMessageText: \"hello Dima\",\r\n        },\r\n        sidebar: {\r\n            friends: [\r\n                {id: 1, name: \"Dima\"},\r\n                {id: 2, name: \"Pasha\"},\r\n                {id: 3, name: \"Sergey\"},\r\n            ]\r\n        }\r\n    },\r\n    _callSubscriber() {\r\n\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer\r\n    },\r\n    addPost() {\r\n        let newPost = {\r\n            id: 5,\r\n            message: this._state.profilePage.newPostText,\r\n            like: 15\r\n        };\r\n        this._state.profilePage.postsData.push(newPost);\r\n        this._state.profilePage.newPostText = '';\r\n        this._callSubscriber(this._state);\r\n    },\r\n    updateNewPostText(newText) {\r\n        this._state.profilePage.newPostText = newText;\r\n        this._callSubscriber(this._state);\r\n    },\r\n    addMessage() {\r\n        let newMessage = {\r\n            id: 4,\r\n            message: this._state.messagesPage.newMessageText,\r\n        };\r\n        this._state.messagesPage.messagesData.push(newMessage);\r\n        this._state.messagesPage.newMessageText = '';\r\n        this._callSubscriber(this._state);\r\n    },\r\n    updateNewMessageText(newText) {\r\n        this._state.messagesPage.newMessageText = newText;\r\n        this._callSubscriber(this._state);\r\n    },\r\n    dispatch(action) {\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action)\r\n        this._state.messagesPage = dialogsReducer(this._state.messagesPage, action)\r\n        this._state.sidebar = sidebarReducer(this._state.sidebar, action)\r\n        this._callSubscriber(this._state);\r\n    }\r\n};\r\n\r\nwindow.store = store;\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {updateNewPostText} from \"../../redux/store\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPosts postsData={props.postsData.postsData} newPostText={props.postsData.newPostText} dispatch={props.dispatch}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport styles from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\";\r\n    return (\r\n        <div className={styles.dialog}>\r\n            <NavLink activeClassName={styles.active} to={path + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport styles from \"../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n\r\n            <div className={styles.message}>\r\n                {props.message}\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {addMessageActionCreator, updateNewMessageTextActionCreator} from \"../../redux/dialogs-reducer\";\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.state.dialogsData.map(d => <DialogItem name={d.name} id={d.id} />)\r\n    let messagesElements = props.state.messagesData.map(m => <Message message={m.message}/>)\r\n\r\n    let messageText = React.createRef();\r\n\r\n    let sendMessage = () => {\r\n        props.dispatch(addMessageActionCreator())\r\n    }\r\n    let onMessageChange = () => {\r\n        let text = messageText.current.value;\r\n        props.dispatch(updateNewMessageTextActionCreator(text))\r\n    }\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={styles.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <textarea onChange={onMessageChange} ref={messageText} value={props.newMessageText}/>\r\n            <button onClick={sendMessage}> Send Message</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\n\nconst App = (props) => {\n    return (\n        <div className=\"appWrapper\">\n            <Header/>\n            <div className=\"contentNavWrapper\">\n                <Navbar sidebar={props.state.sidebar}/>\n                <div className=\"appWrapperContent\">\n                    <Route path=\"/profile\"\n                           render={() => <Profile postsData={props.state.profilePage} dispatch={props.dispatch}/>}/>\n                    <Route path=\"/dialogs\" render={() => <Dialogs state={props.state.messagesPage}\n                                                                  dispatch={props.dispatch}\n                                                                  newMessageText={props.state.messagesPage.newMessageText}\n                    />}/>\n                    <Route path=\"/news\"/>\n                    <Route path=\"/music\"/>\n                    <Route path=\"/settings\"/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage:profileReducer,\r\n    messagesPage:dialogsReducer,\r\n    sidebar:sidebarReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/redux-store\";\n\n\n\nlet rerenderEntireTree = (state) => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <App state={state} dispatch = {store.dispatch.bind(store)}/>\n        </BrowserRouter>, document.getElementById('root'));\n}\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(() => {\n    let state = store.getState()\n    rerenderEntireTree(state)\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__ltNdz\",\"item\":\"Navbar_item__yKd0V\",\"active\":\"Navbar_active__1n4_D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__7mByN\",\"dialogsItem\":\"Dialogs_dialogsItem__B40io\",\"dialog\":\"Dialogs_dialog__cwZS3\",\"messages\":\"Dialogs_messages__14pQm\",\"message\":\"Dialogs_message__-t_Ke\",\"active\":\"Dialogs_active__1FT58\"};"],"sourceRoot":""}
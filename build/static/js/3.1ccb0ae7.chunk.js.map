{"version":3,"sources":["components/hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","undefined","this","props","to","React","connect","module","exports","ProfileStatusWithHook","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onFocus","event","target","select","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","styles","wrapper","description","src","photos","large","fullName","aboutMe","contacts","facebook","vk","Post","item","likesAndMessage","message","like","maxLength10","maxLengthCreator","MyPosts","memo","console","log","posts","postsData","map","post","id","myPost","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","textarea","button","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.1ccb0ae7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(this.props.isAuth === undefined) return null\r\n            if(!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n   let  ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__1tdta\",\"wrapper\":\"ProfileInfo_wrapper__3j5wR\",\"description\":\"ProfileInfo_description__pomnQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3h2I9\",\"textarea\":\"MyPosts_textarea__3UrQM\",\"button\":\"MyPosts_button__2M1xn\",\"wrapper\":\"MyPosts_wrapper__CACXw\",\"myPost\":\"MyPosts_myPost__1FXR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3UFjI\",\"likesAndMessage\":\"Post_likesAndMessage__-iqab\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const handleFocus = (event) => {\r\n        event.target.select()\r\n    }\r\n\r\n    const statusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateMode}>{props.status || \"no status\"}</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onFocus={handleFocus}\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={statusChange}\r\n                       value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHook;","import React from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\n\r\nconst ProfileInfo = ({profile,status,updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.description}>\r\n                <img src={profile.photos.large}/>\r\n                <div>{profile.fullName}</div>\r\n                <div>{profile.aboutMe}</div>\r\n                <div>{profile.contacts.facebook}</div>\r\n                <div>{profile.contacts.vk}</div>\r\n                <ProfileStatusWithHook status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport styles from \"./Post.module.css\";\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={styles.item}>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/4/4d/Conor_McGregor_2018.jpg\"/>\r\n            <div className={styles.likesAndMessage}>\r\n                {props.message}\r\n                <div>\r\n                    <span> Likes </span> - {props.like}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"render\")\r\n    let posts = props.postsData.map(post => <Post message={post.message} key={post.id} like={post.like}/>)\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <h3 className={styles.myPost}>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={addNewPost}/>\r\n            {posts}\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.posts}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name={\"newPostText\"}\r\n                       placeholder={\"Enter your message\"}\r\n                       validate={[required, maxLength10]}\r\n                       className={styles.textarea}/>\r\n            </div>\r\n            <div>\r\n                <button className={styles.button}>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData:state.profilePage.postsData,\r\n        newPostText:state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost:(newPostText) => {dispatch(addPostActionCreator(newPostText))}\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth:state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile,getStatus,updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}